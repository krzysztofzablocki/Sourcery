
//: Do not change this code as it is autogenerated every time you build.
//: You can change the code in `../StencilTemplatesForSourcery/Application/AutoGenerateProtocol

// MARK: - AutoGenerateProtocol
//: From all Types implementing this protocol Sourcery adds:
//: - public/internal variables // private variables are ignored
//: - public/internal methods (skips initializers)
//: - initializers marked with annotation // sourcery:includeInitInProtocol
//: - of the above it does not add it if  // sourcery:skipProtocol
//: ---

{% for type in types.implementing.AutoGenerateProtocol %}
// MARK: - {{ type.name }} AutoGenerated protocol
protocol {{ type.name }}Protocol: AutoMockable {
    {#loop over all variables from this type and not from the super class#}
    {% for variable in type.variables where variable.readAccess != "private" %}
    {%if not method.annotations.skipProtocol %}var {{variable.name}}: {{variable.typeName}} { {%if variable.isMutable %} get set {% else %} get {% endif %} }{% endif %}
    {% endfor %}

    {#optionally add initializers when included in protocol#}
    {% for method in type.methods where method.annotations.includeInitInProtocol %}
    {{method.name}}
    {% endfor %}

    {#loop over all methods static class or normal#}
    {% for method in type.methods where method.accessLevel != "private" and method.isInitializer == 0 %}
    {%if not method.annotations.skipProtocol%}{% if method.isStatic %}static {% endif %}{%if method.isClass %}class {% endif %}func {{method.name}}{% endif %}
    {% endfor %}
}

{% endfor %}
