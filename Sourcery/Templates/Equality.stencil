{% for type in types.classes %}{% if type.storedVariables.count %}{% if not type.annotations.skipEquatable %}
extension {{ type.name }} {
    override func isEqual(_ object: Any?) -> Bool {
        guard let rhs = object as? {{ type.name }} else { return false }
        {% for variable in type.storedVariables %}{% if not variable.annotations.skipEquality %}if self.{{ variable.name }} != rhs.{{ variable.name }} { return false }
        {% endif %}{% endfor %}
        {% if type.inheritedTypes.first == "NSObject" %}return true {% else %}return super.isEqual(rhs){% endif %}
    }
}
{% endif %}{% endif %}{% endfor %}
