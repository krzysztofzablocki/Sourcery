{% for type in types.implementing.Typed %}
extension {{ type.name }} {
    var isOptional: Bool { return typeName.isOptional }
    var isImplicitlyUnwrappedOptional: Bool { return typeName.isImplicitlyUnwrappedOptional }
    var unwrappedTypeName: String { return typeName.unwrappedTypeName }
    var actualTypeName: TypeName? { return typeName.actualTypeName ?? typeName }
    var isTuple: Bool { return typeName.isTuple }
    var isClosure: Bool { return typeName.isClosure }
    var isArray: Bool { return typeName.isArray }
}{% endfor %}
